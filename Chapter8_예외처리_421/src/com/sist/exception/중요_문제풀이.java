package com.sist.exception;
/*
1. 자바의 상속에 대한 설명 중 틀린 것은? 1번

1) 자바는 다중 상속을 허용한다. X
   -> interface를 새용해야만 가능
2) 부모의 메소드를 자식 클래스에서 재정의(오버라이딩)할 수 있다.
3) 부모의 private 접근 제한을 갖는 필드와 메소드는 상속의 대상이 아니다.
4) final 클래스는 상속할 수 없고, final 메소드는 오버라이딩 할 수 없다.


2. 클래스 타입 변환에 대한 설명 중 틀린 것은?

1) 자식 객체는 부모 타입으로 자동 타입 변환된다. X
  ->
2) 부모 객체는 항상 자식 타입으로 강제 타입 변환된다.
3) 자동 타입 변환을 이용해서 필드와 매개 변수의 다형성을 구현한다.
4) 강제 타입 변환 전에 instanceof 연산자로 변환 가능한지 검사하는 것이 좋다.

3. String 타입에 대한 설명으로 틀린 것은 무엇입니까?

① String은 클래스이므로 참조 타입이다. 클래스형(참조타입)
메소드 문자열 데이터형 / 클래스 참조형

② String 타입의 문자열 비교는 == 를 사용해야 한다.x
String s=“Hello”
String s1=new String(“Hello”)
If(s==s1) -> false
If(s.equals(s1))

③ 동일한 문자열 리터럴을 저장하는 변수는 동일한 String 객체를 참조한다.
문자열 자체가 주소임 

④ new String("문자열")은 문자열이 동일하더라도 다른 String 객체를 생성한다.
New를 사용했기때문에 다르다

4. 인터페이스에 대한 설명으로 틀린 것은 무엇입니까? 3번

① 인터페이스는 객체 사용 설명서 역할을 한다.
② 구현 클래스가 인터페이스의 추상 메소드에 대한 실체 메소드를 가지고 있지 않으면 추상 클래스가 된다.
③ 인터페이스는 인스턴스 필드를 가질 수 있다. 없음 상수 만가능
④ 구현 객체는 인터페이스 타입으로 자동 변환된다. ㅇㅇ


5. 인터페이스의 다형성과 거리가 먼 것은?

① 필드가 인터페이스 타입일 경우 다양한 구현 객체를 대입할 수 있다.
② 매개 변수가 인터페이스 타입일 경우 다양한 구현 객체를 대입할 수 있다.
③ 배열이 인터페이스 타입일 경우 다양한 구현 객체를 저장할 수 있다.
④ 구현 객체를 인터페이스 타입으로 변환하려면 강제 타입 변환을 해야 한다. x


6.인터페이스와 클래스가 다른 점은 무엇입니까?
     다중, 단일상속의 차이
모아서관리


7.인터페이스와 추상 클래스가 다른 점은 무엇입니까?
인터페이스의 장점
표준화가 가능하다, 서로다른 클래스 연결 , 독립적으로 사용, 개발시간 단축



9. 다음 중 인터페이스의 장점이 아닌 것은? (390page 참조)

a. 표준화를 가능하게 해준다.
b. 서로 관계없는 클래스들에게 관계를 맺어줄 수 있다.
c. 독립적인 프로그래밍이 가능하다.
d. 다중상속을 가능하게 해준다.
e. 패키지간의 연결을 도와준다.o


10. 다음 중 틀린 것은? D

a. 필드는 초기화하지 않아도 된다. // 전역변수, 클래스네 기본 멤버 변수들 -> 자동으로 초기화됨
b. 클래스에 생성자가 없어도 된다. 없어도 자동생성해줌
c. 생성자는 일반적으로 필드를 초기화한다. 
객체 생성시 호출 -> 멤버변수에 대한 초기화
초기화, 오버로딩을 지원한다

명시적 초기화
구현후 초기화값 대입
초기화 블록
생성자 -> 주로 이걸씀

d. 필드(기본 멤버 변수)는 생성자보다 먼저 선언해야 한다.x //선언 순서는 상과없음


//기본개념
A a=new B() -> A가 갖고있는 데이터만 사용 자료형 타입이 A, 메소드만 변경된것만 사용 B로 초기화
11. 상속을 설명한 것이다. 틀린 것은? B
 
a. 모든 클래스의 최상위 클래스는 Object이다. O
  -> 자바의 모든 클래스는 Object로 부터 상속받는다. 데이터형중에 가장큰 데이터형이다
  -> 라이브러리에서는 반드시 형변환을 한다

b. 부모 객체를 자식 클래스 타입의 변수에 대입할 수 있다. X
  ->
c. 부모 클래스의 private 메소드를 자식 클래스가 오버라이딩할 수 없다. ㅇㅇ 불가함
d. 부모 클래스를 상속하려면 extends 키워드가 필요하다.


14. 다음과 같은 부모 클래스와 자식 클래스가 있다 틀린 곳을 찾으시오
 
class Person {
    void name() { }
    protected void number() { }
    private void secret() { }
}
 
class Student extends Person {
    public void name() { }
    void number() { } <- 자료형 축소
    private void secret() { }


15. 인터페이스를 설명한 것이다. 틀린 것은? C 상수만 가능
 
a. 인터페이스는 인스턴스 변수를 포함할 수 없다.
b. 인터페이스는 생성자를 포함할 수 없다.
c. 인터페이스는 상수를 포함할 수 없다. X
d. 인터페이스의 모든 멤버는 public으로 공개된다.





 */
public class 중요_문제풀이 {

	
	
}
