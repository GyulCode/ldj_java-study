package com.sist.main;

/*
 *   메모리구조
 *   Methodarea, static -> 컴파일러가 자동으로 저장
 *   method도 메모리에 저장
 *   void method()
 *   {
 *      구현분가 있어야 저장이 된다
 *   } -> 선언만 된경우는 클래스를 저장하지 못한다(메모리할당 안됨)
 *     -> 추상클래스 : void method() <- new로 할당 불가, 인터페이스 
 *   Stack : LIFO, 지연변수 매개변수 저장 -> 메모리 자체에서 관리 ({}이 종료되면 사라진다)
 *   ---------------------------------------------------------
 *   HEAP : 동적 메모리 할당 (new) -> 객체변수, 배열(참조변수값)
 *          -> 관리(프로그래머) -> GC(자동메모리 회수)
 *   인터프리터 : 한줄씩 번역
 *   
 *   Stack
 *   
 *   배열 : 직렬적(크기가 같음)
 *   
 *   클래스 : 병렬적, 변수, 메소드 한번에관리
 *    
 *   ---------------------------------------------------------
 *   클래스 
 *   1. 구성요소
 *      1. 변수 60%
 *      = 인스턴스변수 : 객체마다 메모리에 따로 저장
 *      = 정적 변수 : 메모리 공간을 공동으로 한개만 사용(공유변수, 클래스변수)
 *        -static
 *      = 
 *      2. 메소드 30 %
 *         1.종류
 *           인스턴스메소드
 *           정적메소드 static 자동저장
 *           추상메소드
 *           종단메소드 final void aaa() 변경할 수 없는 메소드(확장 불가)
 *           
 *      3. 생성자 5%
 *         객체 생성시 호출되는 메소드
 *         = 멤버변수의 초기화
 *         = 클래스명과 동일
 *         = 리턴형이 없다
 *         = 오버로딩이 가능
 *           -> 명시적 선언이 없을시 기본 생성자를 추가 한다
 *         1.변수만 모아서 관리 : 사용자 정의 데이터형(VO, DTO,BEAN)
 *         2.메소드만 모아서 관리 : 액션클레스 System, DAO, Manager, Service
 *         3.변수+메소드 : 조립 Model, Controller(spring), Action 
 *         
 *   2. 클래스 설계
 *   3. 접근지정어
 *      private
 *      default
 *      protected
 *      public
 *      멤버변수  [접근지정어] 데이터형 변수명
 *      메소드 [접근지정어][제어어][리턴형]메소드명(매개변수)
 *      ***
 *      변수 private
 *      메소드, 생성자 public
 *   4. 객체지향의 특성
 *      1.캡슐화 -> 데이터를 은닉화후에 메소드를 통해서 접근 가능
 *      2.재사용
 *         상속 is-a : 기존의 기능을 변경해서 사용
 *         **잘못 쓰면 큰일나서 개발자들이 잘 안씀
 *         포함 has-a : 기존의 기능을 있는그대로 사용
 *      3.수정, 추가 -> 다형성
 *         수정 : 오버라이딩
 *         추가 : 오버로딩
 *   5. 제어자
 *      static / abstract / final
 *      static final : 상수
 *      final : 상수형 변수
 *   
 */

public class 객체지향정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
