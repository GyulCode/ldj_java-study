/*
 *    1. 클래스 구성요소
 *    class ClassName
 *    {
 *       변수(인스턴스, 멤버, 공유)
 *       = 따로 저장되는 변수 (인스턴스 변수 -> new)
 *       = 공통 저장 변수(컴파이럴에 의해 자동 생성) -> 한개의 메모리만 생성
 *       
 *       메소드(멤버메소드) -> static이 없는 메소드
 *       
 *       생성자 : 멤버변수의 초기화, 객체 생성시에 호출되는 메소드
 *    }
 *    ***class블럭에서는 연산자, 제어문을 사용할 수 없다 선언만 가능하다
 *    ***클래스 블럭에서 변수 선언시 선언할때만 초기화가능 추후에 값 대입이 불가능하다
 *      	-> int i=100 은 가능하지만 int i; i = 100; 이거는 불가능
 *      
 *    1. 객체지향 프로그래밍 (oop)
 *      =여러개의 클래스를 만들어서 -> 조립하는 프로그램 -> CBD(Component Base Develop)
 *      예) 웹 사이트
 *      회원 : 회원가입, 회원탈퇴, 회원수정, 로그인, 로그아웃, 아이디 찾기...
 *      게시판 : 글쓰기, 수정, 상세보기, 삭제, 찾기
 *    
 *    2. 객체 (객체지향의 객체, 객체지향의 특성(캡슐화, 다형성, 추상화, 상속))
 *       쿨리적으로 존재하는것 눈에 보인다
 *       추상적인것 -> 속성, 동작 -> 자바에서 모델링 -> 변수, 메소드
 *       
 *    2. 객체지향 -> 클래스끼리 상호작용을 한다
 *       결과값 응답
 *       특강 3,4강 / 22년도 2회 / 1,2장 단원복습 
 *       
 *    -> 하나의 클래스로부터 여러개의 객체를 생성할 수 있다.
 *       클래스는 한개에 대한 정보를 가지고 있다.
 *       데이터 따로 저장하기 위해서는 new연산자를 이용한다
 *       ->new는 새로운 메모리 공간을 만들어준다
 *       
 *       int a
 *       int b
 *       string s
 *       static int c
 *       ------메모리 12byte할당
 *       모든 주소값은 4byte를 넘지 않는다.
 *       ***static 은 따로 할당하기 때문에 할당되는 메모리 크기에서 제외된다.
 *       
 *       
 *       
 *        
 *       
 *      
 *      
 */
public class 클래스_변수정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
